$date
	Fri Jan 11 02:21:30 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 32 ! aluout [31:0] $end
$var reg 32 " aluin1 [31:0] $end
$var reg 32 # aluin2 [31:0] $end
$var reg 3 $ funct3 [2:0] $end
$var reg 1 % funct7 $end
$scope module test $end
$var wire 32 & aluin1 [31:0] $end
$var wire 32 ' aluin2 [31:0] $end
$var wire 3 ( funct3 [2:0] $end
$var wire 1 % funct7 $end
$var wire 4 ) funct73 [3:0] $end
$var wire 32 * aluout [31:0] $end
$scope function calc $end
$var reg 32 + aluin1 [31:0] $end
$var reg 32 , aluin2 [31:0] $end
$var reg 32 - calc [31:0] $end
$var reg 4 . funct73 [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
b0 "
b0 !
$end
#1
b10000000000000000000000000010001 !
b10000000000000000000000000010001 *
b10000000000000000000000000010001 -
b10000000000000000000000000001010 ,
b111 +
b10000000000000000000000000001010 #
b10000000000000000000000000001010 '
b111 "
b111 &
#3
b1111111111111111111111111111101 !
b1111111111111111111111111111101 *
b1111111111111111111111111111101 -
b1000 .
b1000 )
1%
#4
b1110000000000 !
b1110000000000 *
b1110000000000 -
b1 .
b1 $
b1 (
b1 )
0%
#5
bx !
bx *
bx -
b10 .
b10 )
b10 $
b10 (
#6
b11 .
b11 )
b11 $
b11 (
#7
b100 .
b100 )
b100 $
b100 (
#8
b110 .
b110 )
b110 $
b110 (
#9
b111 .
b111 )
b111 $
b111 (
#10
b10000000000000000000000000000111 +
bx .
b10000000000000000000000000000111 "
b10000000000000000000000000000111 &
bx $
bx (
bx )
x%
#11
b1000000000000000000000 !
b1000000000000000000000 *
b1000000000000000000000 -
b101 .
b101 $
b101 (
b101 )
0%
#12
b11111111111000000000000000000000 !
b11111111111000000000000000000000 *
b11111111111000000000000000000000 -
b1101 .
b1101 )
1%
